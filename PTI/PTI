public abstract class Veiculo
{

  //propriedades - atributos
  protected int TaxaDiaria {get; set;}

// construtor - com o parametro da propriedade para fazer a instancia e ler ou alterar.
  public Veiculo (int TaxaDiaria){

    this.TaxaDiaria = TaxaDiaria;

  }

  //metodo abstrato para ser implementado nas subclasses 
  public abstract int CalcularValorTotal(int numDiarias);

//subclass carro

public class Carro : Veiculo
{

  //Construtor para inicializar a taxa diária especifica do carro 
  public Carro(int taxaDiaria) : base (taxaDiaria){ }

  public override int CalcularValorTotal(int numDiarias)
    {
       return TaxaDiaria * numDiarias;
    }
}

public class Moto : Veiculo
{

  public Moto(int taxaDiaria) : base (taxaDiaria){ }

    public override int CalcularValorTotal(int numDiarias)
    {
        return TaxaDiaria * numDiarias;
    }
}


static void Main(string[] args){

  Veiculo Carro = new Carro(50);
  Console.WriteLine($"O valor total para 10 diárias de carro : {Carro.CalcularValorTotal} reais");

  Veiculo Moto = new Moto(25);
  Console.WriteLine($"O valor total para 10 diárias de moto : {Moto.CalcularValorTotal} reais");

}

}

